[
["index.html", "Exploring the utility of human genetic interactions for gene function predictions Section 1 Overview", " Exploring the utility of human genetic interactions for gene function predictions Hai Fang 2020-08-23 Section 1 Overview As part of Epistasis: Methods and Protocols, Methods in Molecular Biology - Springer, we describe three showcases analysing human genetic interactions and/or gene expression data in human tissues (Materials), compatible with the concept of tidy data science (FIGURE ?? and FIGURE ??). All done exclusively using the R one-liner, defined as a sequential pipeline of elementary functions chained together achieving a complex task. We will guide the users through step-by-step instructions on ([Case 1]) how to identify, visualise and interpret network modules of genetic interactions; ([Case 2]) how to identify and interpret tissue-specific genetic interactions; and ([Case 3]) how to carry out genetic interaction-based tissue clustering and differential interaction analysis. All three showcases are producible on its own, achieved in relatively short runtime (~20 min for Case 1, ~15 min for Case 2, and ~25 min for Case 3). We encourage the users to run through these showcases before analysing their own datasets. "],
["materials.html", "Section 2 Materials", " Section 2 Materials R and packages At the time of writing, the most recent version of R is 4.0.2 (Dark and Stormy Night). The instructions of how to install R in different platforms (Linux, OS X and Windows) can be found at https://www.r-project.org where precompiled binaries are provided for download. For Linux users who do not have a sudo privilege, R could be installed from the source code at the home directory (that is, $HOME): wget https://cran.wu.ac.at/src/base/R-4/R-4.0.2.tar.gz tar xvfz R-4.0.2.tar.gz cd R-4.0.2 ./configure --prefix=$HOME/R-4.0.2 make make check make install $HOME/R-4.0.2/bin/R # start R We highly recommend using a dedicated package BiocManager to install and update any packages that have been deposited into Bioconductor and CRAN, two repositories that are exclusive to each other so that a package cannot be deposited into both. BiocManager should be installed first in a conventional way (i.e. using the function install.packages), and then can be used to install other packages in a single step. Once an additional package remotes also installed, BiocManager can be also used to install packages hosted at GitHub, usually as a development repository prior to submission into Bioconductor or CRAN. # first, install the package BiocManager install.packages(&quot;BiocManager&quot;) # then install packages from Bioconductor and CRAN BiocManager::install(c(&quot;biobroom&quot;,&quot;dnet&quot;,&quot;ggrepel&quot;,&quot;gridExtra&quot;,&quot;limma&quot;,&quot;patchwork&quot;,&quot;remotes&quot;,&quot;tidyverse&quot;,&quot;osfr&quot;), dependencies=T) # can also install packages from GitHub BiocManager::install(&quot;hfang-bristol/XGR&quot;) Genetic interactions We extracted human genetic interactions from BioGRID (version 3.5.179) involving 3102 genes (mapped to NCBI GeneID; the same hereinafter) and their 7856 interactions. This dataset was preprocessed into an igraph object (using the igraph package), saved as an RData-formatted file ig.BioGRID_genetic.RData, deposited at https://osf.io/gskpn). org.Hs.egGOMF ## $info ## # A tibble: 4,156 x 6 ## name id namespace distance member n ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;list&gt; &lt;dbl&gt; ## 1 molecular_function GO:00036… Molecular Func… 0 &lt;chr [16,3… 16335 ## 2 binding GO:00054… Molecular Func… 1 &lt;chr [13,4… 13424 ## 3 catalytic activity GO:00038… Molecular Func… 1 &lt;chr [4,87… 4870 ## 4 transcription regulator… GO:01401… Molecular Func… 1 &lt;chr [1,59… 1596 ## 5 molecular function regu… GO:00987… Molecular Func… 1 &lt;chr [1,45… 1451 ## 6 molecular transducer ac… GO:00600… Molecular Func… 1 &lt;chr [1,27… 1274 ## 7 transporter activity GO:00052… Molecular Func… 1 &lt;chr [1,01… 1010 ## 8 structural molecule act… GO:00051… Molecular Func… 1 &lt;chr [548]&gt; 548 ## 9 translation regulator a… GO:00451… Molecular Func… 1 &lt;chr [121]&gt; 121 ## 10 antioxidant activity GO:00162… Molecular Func… 1 &lt;chr [75]&gt; 75 ## # … with 4,146 more rows ## ## $stamp ## [1] &quot;2020-05-18&quot; ## ## attr(,&quot;class&quot;) ## [1] &quot;SET&quot; Gene annotations by GO Molecular Function terms We extracted human genetic interactions from BioGRID (version 3.5.179) involving 3102 genes (mapped to NCBI GeneID; the same hereinafter) and their 7856 interactions. This dataset was preprocessed into an igraph object (using the igraph package), saved as an RData-formatted file ig.BioGRID_genetic.RData, deposited at https://osf.io/gskpn). ig.BioGRID_genetic ## IGRAPH 56d837e UN-- 3198 7968 -- ## + attr: stamp (g/n), name (v/c), description (v/c), nPMID (e/n) ## + edges from 56d837e (vertex names): ## [1] A1BG --REV3L A2M --KRAS AAGAB --TP53 AAMP --KRAS ## [5] AANAT --P2RY6 AANAT --SPHK1 AANAT --SSTR5 AANAT --TOP1 ## [9] AARS2 --LEO1 AARS2 --MRPS16 AARS2 --MRPS5 AARS2 --PSMB6 ## [13] AATF --DONSON AATF --GFI1B AATF --MCM3AP ABCB5 --CSK ## [17] ABCB5 --KRAS ABCB7 --AURKA ABCB7 --HSCB ABCB7 --LONP1 ## [21] ABCB7 --MBTPS2 ABCB7 --MED23 ABCB7 --NUBP1 ABCB7 --PITRM1 ## [25] ABCB7 --TAF2 ABCC4 --MPP1 ABCE1 --KRAS ABCG2 --CSK ## [29] ABCG5 --FLT3 ABHD5 --KRAS ABL1 --RPS6KB1 ABRACL--CSK ## + ... omitted several edges "],
["get-started.html", "Section 3 Get started", " Section 3 Get started Do prediction library(tidyverse) ## pre-calculate affinity matrix estimated using 2-step short random walk kernel ## on a network of genetic interactions (ig.BioGRID_genetic) df_mat &lt;- Fang::oRWkernel(ig.BioGRID_genetic, steps=2) %&gt;% as.matrix() ## define known gene annotations for each term df_term &lt;- org.Hs.egGOMF$info %&gt;% mutate(ic=-log10(n/max(n))) %&gt;% rename(term=name) %&gt;% filter(n&gt;=5) ## df_pred ## note: ~2 min runtime using single core (Mac) message(sprintf(&quot;Start (%s) ...&quot;, as.character(Sys.time())), appendLF=T) pb &lt;- df_term %&gt;% nrow() %&gt;% progress_estimated() df_term %&gt;% select(term, member) %&gt;% mutate(pred=map(member, function(x){ pb$tick()$print() y &lt;- df_mat ind &lt;- which(!is.na(match(colnames(y),x))) ## force to be 0 for the self of each seed gene diag(y)[ind] &lt;- 0 ## how many genes used for the average vec &lt;- rep(length(ind), nrow(y)) vec[ind] &lt;- length(ind) -1 ## calculate predictive score if(length(ind)&gt;=5){ res &lt;- apply(y[,ind], 1, sum) / vec res %&gt;% enframe(name=&quot;gene&quot;, value=&quot;score&quot;) %&gt;% left_join(tibble(gene=x, seed=1), by=&#39;gene&#39;) %&gt;% arrange(-score) }else{ NULL } })) %&gt;% filter(map_lgl(pred,~!is.null(.x))) %&gt;% select(term,pred) -&gt; df_pred message(sprintf(&quot;Finished (%s) ...&quot;, as.character(Sys.time())), appendLF=T) ## also append a list-column storing seed genes per term df_pred &lt;- df_pred %&gt;% mutate(seed=map(pred, ~.x %&gt;% filter(!is.na(seed)) %&gt;% pull(gene))) Gene-centric predictive score for each term is stored in a tibble df_pred, with 3 columns including 'term', 'pred' (a list-column containing details on gene-centric predictive score including 3 columns 'gene', 'score' for predictive score and 'seed' indicating whether or a seed gene), and 'seed' (seed genes). df_pred ## # A tibble: 702 x 3 ## term pred seed ## &lt;chr&gt; &lt;list&gt; &lt;list&gt; ## 1 molecular_function &lt;tibble [3,198 × 3]&gt; &lt;chr [2,846]&gt; ## 2 binding &lt;tibble [3,198 × 3]&gt; &lt;chr [2,511]&gt; ## 3 catalytic activity &lt;tibble [3,198 × 3]&gt; &lt;chr [1,092]&gt; ## 4 transcription regulator activity &lt;tibble [3,198 × 3]&gt; &lt;chr [326]&gt; ## 5 molecular function regulator &lt;tibble [3,198 × 3]&gt; &lt;chr [275]&gt; ## 6 molecular transducer activity &lt;tibble [3,198 × 3]&gt; &lt;chr [161]&gt; ## 7 transporter activity &lt;tibble [3,198 × 3]&gt; &lt;chr [150]&gt; ## 8 structural molecule activity &lt;tibble [3,198 × 3]&gt; &lt;chr [130]&gt; ## 9 translation regulator activity &lt;tibble [3,198 × 3]&gt; &lt;chr [37]&gt; ## 10 antioxidant activity &lt;tibble [3,198 × 3]&gt; &lt;chr [9]&gt; ## # … with 692 more rows Evaluate prediction performance ## df_auc df_term_pred &lt;- df_term %&gt;% inner_join(df_pred, by=&#39;term&#39;) pb &lt;- df_term_pred %&gt;% nrow() %&gt;% progress_estimated() df_term_pred %&gt;% mutate(auc=map2_dbl(member, pred, function(x,y){ pb$tick()$print() res &lt;- Fang::xClassifyPerf(prediction=y, GSP=x, GSN=NULL, verbose=F)$auroc })) -&gt; df_auc The tibble df_auc contains term-centric performance measured by AUC (the column 'auc'). df_auc ## # A tibble: 702 x 10 ## term id namespace distance member n ic pred seed auc ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;list&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;list&gt; &lt;list&gt; &lt;dbl&gt; ## 1 molecula… GO:00… Molecular… 0 &lt;chr [… 16335 0 &lt;tibb… &lt;chr … 0.641 ## 2 binding GO:00… Molecular… 1 &lt;chr [… 13424 0.0852 &lt;tibb… &lt;chr … 0.638 ## 3 catalyti… GO:00… Molecular… 1 &lt;chr [… 4870 0.526 &lt;tibb… &lt;chr … 0.607 ## 4 transcri… GO:01… Molecular… 1 &lt;chr [… 1596 1.01 &lt;tibb… &lt;chr … 0.698 ## 5 molecula… GO:00… Molecular… 1 &lt;chr [… 1451 1.05 &lt;tibb… &lt;chr … 0.514 ## 6 molecula… GO:00… Molecular… 1 &lt;chr [… 1274 1.11 &lt;tibb… &lt;chr … 0.621 ## 7 transpor… GO:00… Molecular… 1 &lt;chr [… 1010 1.21 &lt;tibb… &lt;chr … 0.620 ## 8 structur… GO:00… Molecular… 1 &lt;chr [… 548 1.47 &lt;tibb… &lt;chr … 0.677 ## 9 translat… GO:00… Molecular… 1 &lt;chr [… 121 2.13 &lt;tibb… &lt;chr … 0.647 ## 10 antioxid… GO:00… Molecular… 1 &lt;chr [… 75 2.34 &lt;tibb… &lt;chr … 0.603 ## # … with 692 more rows Visualise term-specific AUC (see A), further stratified by information content of terms (see B). library(patchwork) library(ggforce) gp1 &lt;- df_auc %&gt;% ggplot(aes(x=namespace, y=auc, color=namespace)) + geom_violin() + ggforce::geom_sina(size=0.1, alpha=0.5) + theme_classic() + guides(color=&#39;none&#39;) gp2 &lt;- df_auc %&gt;% ggplot(aes(x=ic, y=auc, color=namespace)) + geom_point(size=0.1) + theme_classic() + guides(color=&#39;none&#39;) (gp1 | gp2) + plot_annotation(tag_levels=&#39;A&#39;) "],
["session-info.html", "Section 4 Session Info", " Section 4 Session Info TABLE 4.1: Session info on R, OS, and attached/loaded packages pkg version title dplyr 1.0.1 A Grammar of Data Manipulation forcats 0.5.0 Tools for Working with Categorical Variables (Factors) ggforce 0.3.2 Accelerating 'ggplot2' ggplot2 3.3.2 Create Elegant Data Visualisations Using the Grammar of Graphics igraph 1.2.5 Network Analysis and Visualization magrittr 1.5 A Forward-Pipe Operator for R patchwork 1.0.1 The Composer of Plots purrr 0.3.4 Functional Programming Tools readr 1.3.1 Read Rectangular Text Data stringr 1.4.0 Simple, Consistent Wrappers for Common String Operations tibble 3.0.3 Simple Data Frames tidyr 1.1.1 Tidy Messy Data tidyverse 1.3.0 Easily Install and Load the 'Tidyverse' ape 5.4 Analyses of Phylogenetics and Evolution assertthat 0.2.1 Easy Pre and Post Assertions backports 1.1.8 Reimplementations of Functions Introduced Since R-3.0.0 BiocGenerics 0.34.0 S4 generic functions used in Bioconductor bitops 1.0-6 Bitwise Operations blob 1.2.1 A Simple S3 Class for Representing Vectors of Binary Data ('BLOBS') bookdown 0.20 Authoring Books and Technical Documents with R Markdown broom 0.7.0 Convert Statistical Objects into Tidy Tibbles cellranger 1.1.0 Translate Spreadsheet Cell Ranges to Rows and Columns cli 2.0.2 Helpers for Developing Command Line Interfaces colorspace 1.4-1 A Toolbox for Manipulating and Assessing Colors and Palettes compiler 4.0.2 The R Compiler Package crayon 1.3.4 Colored Terminal Output crul 1.0.0 HTTP Client curl 4.3 A Modern and Flexible Web Client for R DBI 1.1.0 R Database Interface dbplyr 1.4.4 A 'dplyr' Back End for Databases digest 0.6.25 Create Compact Hash Digests of R Objects dnet 1.1.7 Integrative Analysis of Omics Data in Terms of Network, Evolution and Ontology ellipsis 0.3.1 Tools for Working with ... evaluate 0.14 Parsing and Evaluation Tools that Provide More Details than the Default fansi 0.4.1 ANSI Control Sequence Aware String Functions farver 2.0.3 High Performance Colour Space Manipulation fs 1.5.0 Cross-Platform File System Operations Based on 'libuv' generics 0.0.2 Common S3 Generics not Provided by Base R Methods Related to Model Fitting GenomeInfoDb 1.24.2 Utilities for manipulating chromosome names, including modifying them to follow a particular naming style GenomeInfoDbData 1.2.3 Species and taxonomy ID look up tables used by GenomeInfoDb GenomicRanges 1.40.0 Representation and manipulation of genomic intervals ggnetwork 0.5.8 Geometries to Plot Networks with 'ggplot2' ggrepel 0.8.2 Automatically Position Non-Overlapping Text Labels with 'ggplot2' glue 1.4.1 Interpreted String Literals graph 1.66.0 graph: A package to handle graph data structures grid 4.0.2 The Grid Graphics Package gtable 0.3.0 Arrange 'Grobs' in Tables haven 2.3.1 Import and Export 'SPSS', 'Stata' and 'SAS' Files hexbin 1.28.1 Hexagonal Binning Routines highr 0.8 Syntax Highlighting for R Source Code hms 0.5.3 Pretty Time of Day htmltools 0.5.0 Tools for HTML httpcode 0.3.0 'HTTP' Status Code Helper httr 1.4.2 Tools for Working with URLs and HTTP IRanges 2.22.2 Foundation of integer range manipulation in Bioconductor jsonlite 1.7.0 A Robust, High Performance JSON Parser and Generator for R knitr 1.29 A General-Purpose Package for Dynamic Report Generation in R labeling 0.3 Axis Labeling lattice 0.20-41 Trellis Graphics for R lifecycle 0.2.0 Manage the Life Cycle of your Package Functions lubridate 1.7.9 Make Dealing with Dates a Little Easier MASS 7.3-51.6 Support Functions and Datasets for Venables and Ripley's MASS Matrix 1.2-18 Sparse and Dense Matrix Classes and Methods memoise 1.1.0 Memoisation of Functions modelr 0.1.8 Modelling Functions that Work with the Pipe munsell 0.5.0 Utilities for Using Munsell Colours nlme 3.1-148 Linear and Nonlinear Mixed Effects Models osfr 0.2.8 Interface to the 'Open Science Framework' ('OSF') parallel 4.0.2 Support for Parallel computation in R pillar 1.4.6 Coloured Formatting for Columns pkgconfig 2.0.3 Private Configuration for 'R' Packages polyclip 1.10-0 Polygon Clipping R6 2.4.1 Encapsulated Classes with Reference Semantics RCircos 1.2.1 Circos 2D Track Plot Rcpp 1.0.5 Seamless R and C++ Integration RCurl 1.98-1.2 General Network (HTTP/FTP/...) Client Interface for R readxl 1.3.1 Read Excel Files reprex 0.3.0 Prepare Reproducible Example Code via the Clipboard Rgraphviz 2.32.0 Provides plotting capabilities for R graph objects rlang 0.4.7 Functions for Base Types and Core R and 'Tidyverse' Features rmarkdown 2.3 Dynamic Documents for R rstudioapi 0.11 Safely Access the RStudio API rvest 0.3.6 Easily Harvest (Scrape) Web Pages S4Vectors 0.26.1 Foundation of vector-like and list-like containers in Bioconductor scales 1.1.1 Scale Functions for Visualization stats4 4.0.2 Statistical Functions using S4 Classes stringi 1.4.6 Character String Processing Facilities supraHex 1.27.3 supraHex: a supra-hexagonal map for analysing tabular omics data tidyselect 1.1.0 Select from a Set of Strings tools 4.0.2 Tools for Package Development tweenr 1.0.1 Interpolate Data for Smooth Animations utf8 1.1.4 Unicode Text Processing vctrs 0.3.2 Vector Helpers withr 2.2.0 Run Code 'With' Temporarily Modified Global State xfun 0.16 Miscellaneous Functions by 'Yihui Xie' XGR 1.1.8 Exploring Genomic Relations for Enhanced Interpretation Through Enrichment, Similarity, Network and Annotation Analysis xml2 1.3.2 Parse XML XVector 0.28.0 Foundation of external vector representation and manipulation in Bioconductor yaml 2.2.1 Methods to Convert R Data to YAML and Back zlibbioc 1.34.0 An R packaged zlib-1.2.5 "]
]
